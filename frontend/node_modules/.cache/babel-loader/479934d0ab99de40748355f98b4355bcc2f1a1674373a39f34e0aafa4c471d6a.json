{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавляем перехватчик для обработки ошибок\napi.interceptors.response.use(response => response, error => {\n  // Обрабатываем ошибку 401 (Unauthorized)\n  if (error.response && error.response.status === 401) {\n    // Если токен недействителен, удаляем его из localStorage\n    localStorage.removeItem('token');\n    // Перенаправляем на страницу входа\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Добавляем перехватчик для добавления токена к запросам\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","response","use","error","status","localStorage","removeItem","window","location","href","Promise","reject","request","config","token","getItem"],"sources":["/Users/Mansur/Downloads/ai_analytics_assistant 2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Добавляем перехватчик для обработки ошибок\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Обрабатываем ошибку 401 (Unauthorized)\n    if (error.response && error.response.status === 401) {\n      // Если токен недействителен, удаляем его из localStorage\n      localStorage.removeItem('token');\n      // Перенаправляем на страницу входа\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Добавляем перехватчик для добавления токена к запросам\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAE/E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACnD;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAP,GAAG,CAACI,YAAY,CAACY,OAAO,CAACV,GAAG,CACzBW,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAID,KAAK,EAAE;IACTD,MAAM,CAACd,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUe,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAV,KAAK,IAAKO,OAAO,CAACC,MAAM,CAACR,KAAK,CACjC,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}